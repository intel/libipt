; Copyright (c) 2018-2024, Intel Corporation
; SPDX-License-Identifier: BSD-3-Clause
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met:
;
;  * Redistributions of source code must retain the above copyright notice,
;    this list of conditions and the following disclaimer.
;  * Redistributions in binary form must reproduce the above copyright notice,
;    this list of conditions and the following disclaimer in the documentation
;    and/or other materials provided with the distribution.
;  * Neither the name of Intel Corporation nor the names of its contributors
;    may be used to endorse or promote products derived from this software
;    without specific prior written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.

; Test github issue #34.
;
; When the block decoder switched images it forgot to update the block's isid.
; When the next block was decoded from the cache it would get a zero isid.
;
; opt:ptdump --sb:compact --sb:offset
; opt:ptxed --sb:compact --sb:offset
;

org 0x1000
bits 64

; @sb primary(pevent)
; @sb pevent-sample_type(time)
; @sb s0: pevent-mmap-section(text, 1, 1, 0x0)
; @sb s1: pevent-mmap-section(foo, 1, 1, 0x0)
; @sb s2: pevent-itrace-start(1, 1, 0x0)

section text vstart=0x1000 start=0x1000
; @pt p0: psb()
; @pt p1: mode.exec(64bit)
; @pt p2: fup(3: %l0)
; @pt p3: tsc(0x1)
; @pt p4: psbend()
l0: nop

; @pt p5: tip(1: %l5)
; @pt p6: tip(1: %l0)
; @pt p7: tip(1: %l3)
l1: jmp rax
l2: hlt

l3: nop

; @pt p8: fup(1: %l4)
; @pt p9: tip.pgd(0: %l4)
l4: hlt

section foo vstart=0xa000 start=0x1100
l5: ret

; @pt .exp(ptxed)
;%0s0  PERF_RECORD_MMAP 1/1, 1000, 6, 0, pevent-mmap-tip_cached.bin { 0 }
;%0s1  PERF_RECORD_MMAP 1/1, a000, 1, 100, pevent-mmap-tip_cached.bin { 0 }
;%0s2  PERF_RECORD_ITRACE_START 1/1 { 0 }
;%0l0 # nop
;%0l1 # jmp rax
;%0l5 # ret
;%0l0 # nop
;%0l1 # jmp rax
;%0l3 # nop
;[disabled]

; @pt .exp(ptdump)
;%0p0  psb
;%0p1  mode.exec  cs.l
;%0p2  fup        3: %?l0
;%0s0  PERF_RECORD_MMAP 1/1, 1000, 6, 0, pevent-mmap-tip_cached.bin { 0 }
;%0s1  PERF_RECORD_MMAP 1/1, a000, 1, 100, pevent-mmap-tip_cached.bin { 0 }
;%0s2  PERF_RECORD_ITRACE_START 1/1 { 0 }
;%0p3  tsc        1
;%0p4  psbend
;%0p5  tip        1: %?l5.2
;%0p6  tip        1: %?l0.2
;%0p7  tip        1: %?l3.2
;%0p8  fup        1: %?l4.2
;%0p9  tip.pgd    0: %?l4.0
